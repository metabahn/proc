name: CI

on:
  pull_request:
    branches:
    - main

jobs:
  test-client-javascript:
    runs-on: ubuntu-latest

    name: Test JavaScript Client

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Setup
        shell: bash -l -e -o pipefail {0}
        run: |
          cd clients/javascript
          rm -f package-json.lock
          npm install

      - name: Test
        shell: bash -l -e -o pipefail {0}
        run: |
          cd clients/javascript
          npm test
        env:
          SECRET: ${{secrets.PROC_SECRET}}

  lint-client-ruby:
    runs-on: ubuntu-latest

    name: Lint Ruby Client

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.1
          bundler-cache: true
          working-directory: clients/ruby

      - name: Run Linter
        shell: bash -l -e -o pipefail {0}
        run: |
          cd clients/ruby
          CI=true bundle exec standardrb

  test-client-ruby:
    runs-on: ubuntu-latest

    name: Test Ruby Client ${{ matrix.ruby }}

    strategy:
      matrix:
        ruby:
          - 3.0.1

      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          working-directory: clients/ruby

      - name: Run Tests
        shell: bash -l -e -o pipefail {0}
        run: |
          cd clients/ruby
          bundle exec rspec
        env:
          SECRET: ${{secrets.PROC_SECRET}}

  lint-composer-ruby:
    runs-on: ubuntu-latest

    name: Lint Ruby Composer

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.1
          bundler-cache: true
          working-directory: composer/ruby

      - name: Run Linter
        shell: bash -l -e -o pipefail {0}
        run: |
          cd composer/ruby
          CI=true bundle exec standardrb

  test-composer-ruby:
    runs-on: ubuntu-latest

    name: Test Ruby Composer ${{ matrix.ruby }}

    strategy:
      matrix:
        ruby:
          - 3.0.1

      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          working-directory: composer/ruby

      - name: Run Tests
        shell: bash -l -e -o pipefail {0}
        run: |
          cd composer/ruby
          bundle exec rspec
        env:
          SECRET: ${{secrets.PROC_SECRET}}

  test-cli:
    runs-on: ubuntu-latest

    name: Test CLI ${{ matrix.ruby }}

    strategy:
      matrix:
        ruby:
          - 3.0.1

      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: '1.17' # The Go version to download (if necessary) and use.
      - run: go version

      - name: Setup Go
        shell: bash -l -e -o pipefail {0}
        run: |
          cd cli
          go mod vendor
          go version

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
          working-directory: cli

      - name: Run Tests
        shell: bash -l -e -o pipefail {0}
        run: |
          cd cli
          bundle exec rspec
        env:
          PROC_AUTH: ${{secrets.PROC_SECRET}}
